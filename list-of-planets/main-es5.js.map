{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/header/header.component.ts","webpack:///src/app/modules/header/header.component.html","webpack:///src/app/modules/planet-details/planet-details.component.ts","webpack:///src/app/modules/planet-details/planet-details.component.html","webpack:///src/app/modules/planet-image/planet-image.component.ts","webpack:///src/app/modules/planet-image/planet-image.component.html","webpack:///src/app/modules/planets/planets.component.ts","webpack:///src/app/modules/planets/planets.component.html","webpack:///src/app/services/cache.service.ts","webpack:///src/app/services/http-client.service.ts","webpack:///src/app/services/planets.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","PlanetDetailsComponent","activatedRoute","planetsService","router","planet","rotationPeriod","orbitalPeriod","climate","isLoading","queryParams","subscribe","params","planetName","findPlanet","data","results","rotation_period","orbital_period","navigate","goToMainPage","PlanetImageComponent","arrayUrl","planetUrl","split","slice","src","String","Number","PlanetsComponent","planets","planetsPerPage","pageSizeOptions","planetNameChanged","getPlanets","pipe","getPlanetsTotal","totalPlanets","count","name","pageData","pageSize","pageIndex","next","changePage","CacheService","options","expirationMins","expirationMS","record","value","JSON","stringify","expiration","Date","getTime","hasExpiration","localStorage","setItem","key","item","getItem","parse","now","removeItem","clear","providedIn","LocalStorageSaveOptions","HttpClientService","http","cacheService","httpCall","verb","body","cacheMins","load","url","request","response","save","HttpOptions","PlanetsService","apiUrl","get","page","i","pageTo","Math","ceil","pageFrom","finalAPI","getPage","acc","concat","splice","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PlanetsComponent} from './modules/planets/planets.component';\nimport {PlanetDetailsComponent} from './modules/planet-details/planet-details.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlanetsComponent\n  },\n  {\n    path: 'detail',\n    component: PlanetDetailsComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'list-of-planets';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './modules/header/header.component';\nimport { PlanetsComponent } from './modules/planets/planets.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { PlanetImageComponent } from './modules/planet-image/planet-image.component';\nimport { PlanetDetailsComponent } from './modules/planet-details/planet-details.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatButton, MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PlanetsComponent,\n    PlanetImageComponent,\n    PlanetDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatPaginatorModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"main-header\">\n<img src=\"assets/wstazka.png\" alt=\"img\">\n  <span class=\"text\">{{'list of planets' | uppercase}}</span>\n</header>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PlanetsService} from '../../services/planets.service';\n\n@Component({\n  selector: 'app-planet-details',\n  templateUrl: './planet-details.component.html',\n  styleUrls: ['./planet-details.component.scss']\n})\nexport class PlanetDetailsComponent implements OnInit {\n  planetName: string;\n  planet = {\n    rotationPeriod: '',\n    orbitalPeriod: '',\n    climate: ''\n  };\n  isLoading = false;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private planetsService: PlanetsService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.planetName = params['name'];\n\n      this.planetsService.findPlanet(this.planetName).subscribe(data => {\n\n        this.planet.climate = data.results[0].climate;\n        this.planet.rotationPeriod = data.results[0].rotation_period;\n        this.planet.orbitalPeriod = data.results[0].orbital_period;\n        this.isLoading = false;\n\n      });\n    });\n  }\n\n  goToMainPage(){\n    this.router.navigate(['/']);\n  }\n\n}\n","<section class=\"main-section\">\r\n  <button mat-raised-button class=\"standard-button\" (click)=\"goToMainPage()\">Back</button>\r\n  <div *ngIf=\"!isLoading\" class=\"planet-info\">\r\n    <h1>{{planetName}}</h1>\r\n    <p>Rotation period: {{planet.rotationPeriod}}</p>\r\n    <p>Orbital period: {{planet.orbitalPeriod}}</p>\r\n    <p>Climate: {{planet.climate}}</p>\r\n  </div>\r\n  <mat-spinner *ngIf=\"isLoading\" color=\"warn\"></mat-spinner>\r\n</section>\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-planet-image',\n  templateUrl: './planet-image.component.html',\n  styleUrls: ['./planet-image.component.scss']\n})\nexport class PlanetImageComponent implements OnInit {\n  src: string;\n  constructor() {}\n  @Input() planetUrl: string;\n\n  ngOnInit(): void {\n    const arrayUrl = this.planetUrl.split('/');\n    const id = arrayUrl.slice(-2, -1);\n    this.src = String(Number(id) % 20);\n  }\n\n}\n","<img [src]=\"'assets/planets/' + src + '.png'\" alt=\"planets-icon\">\n","import { Component, OnInit } from '@angular/core';\nimport {PlanetsService} from '../../services/planets.service';\nimport {PageEvent} from '@angular/material/paginator';\nimport {Router} from '@angular/router';\nimport {Subject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-planets',\n  templateUrl: './planets.component.html',\n  styleUrls: ['./planets.component.scss']\n})\nexport class PlanetsComponent implements OnInit {\n  planets = [];\n  totalPlanets: number;\n  planetsPerPage = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n  isLoading = false;\n  planetNameChanged: Subject<string> = new Subject<string>();\n\n\n  constructor(private planetsService: PlanetsService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.planetsService.getPlanets(1, this.planetsPerPage).pipe().subscribe(data => {\n      this.planets = data;\n      this.isLoading = false;\n    });\n    this.planetsService.getPlanetsTotal().subscribe(data => {\n      this.totalPlanets = data.count;\n    });\n    this.planetNameChanged.pipe(\n      debounceTime(300),\n      distinctUntilChanged())\n      .subscribe(name => {\n        this.planetsService.findPlanet(name).subscribe(data => {\n          this.planets = data.results;\n          this.totalPlanets = data.count;\n        });\n      });\n  }\n\n  changePage(pageData: PageEvent): void {\n    this.isLoading = true;\n    this.planetsPerPage = pageData.pageSize;\n    this.planetsService.getPlanets(pageData.pageIndex + 1, pageData.pageSize).subscribe(data => {\n      this.planets = data;\n      this.isLoading = false;\n    });\n  }\n\n  search(planetName: string): void {\n    this.planetNameChanged.next(planetName);\n  }\n\n  goToPlanetDetails(planetName: string): void {\n    this.router.navigate(['detail'], {queryParams: {name: planetName}});\n  }\n\n\n}\n","<section class=\"main-section\">\n  <div class=\"search-container\" *ngIf=\"!isLoading\">\n    <label for=\"search-box\">Search:</label>\n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\"/>\n  </div>\n  <div class=\"planets-container\" *ngIf=\"planets.length > 0\">\n    <div class=\"single-planet\" *ngFor=\"let planet of planets\" (click)=\"goToPlanetDetails(planet.name)\">\n      <app-planet-image [planetUrl]=\"planet.url\"></app-planet-image>\n      <span>{{planet.name}}</span>\n    </div>\n  </div>\n  <div class=\"spinner\">\n    <mat-spinner *ngIf=\"isLoading\" color=\"warn\"></mat-spinner>\n  </div>\n  <mat-paginator [length]=\"totalPlanets\" [pageSize]=\"planetsPerPage\" [pageSizeOptions]=\"pageSizeOptions\"\n                 (page)=\"changePage($event)\"></mat-paginator>\n</section>\n\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n  constructor() {\n  }\n\n  save(options: LocalStorageSaveOptions) {\n    options.expirationMins = options.expirationMins || 0;\n\n    const expirationMS = options.expirationMins !== 0 ? options.expirationMins * 60 * 1000 : 0;\n\n    const record = {\n      value: typeof options.data === 'string' ? options.data : JSON.stringify(options.data),\n      expiration: expirationMS !== 0 ? new Date().getTime() + expirationMS : null,\n      hasExpiration: expirationMS !== 0 ? true : false\n    };\n    localStorage.setItem(options.key, JSON.stringify(record));\n  }\n\n  load(key: string) {\n    const item = localStorage.getItem(key);\n    if (item !== null) {\n      const record = JSON.parse(item);\n      const now = new Date().getTime();\n      if (!record || (record.hasExpiration && record.expiration <= now)) {\n        return null;\n      } else {\n        return JSON.parse(record.value);\n      }\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  cleanLocalStorage() {\n    localStorage.clear();\n  }\n}\n\nexport class LocalStorageSaveOptions {\n  key: string;\n  data: any;\n  expirationMins?: number;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {CacheService} from './cache.service';\nimport {Observable, of} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientService {\n\n  constructor(\n    private http: HttpClient,\n    private cacheService: CacheService,\n  ) {\n  }\n\n  get<T>(options: HttpOptions): Observable<T> {\n    return this.httpCall('GET', options);\n  }\n\n  private httpCall<T>(verb: string, options: HttpOptions): Observable<T> {\n\n    options.body = options.body || null;\n    options.cacheMins = options.cacheMins || 0;\n\n    if (options.cacheMins > 0) {\n      const data = this.cacheService.load(options.url);\n      if (data !== null) {\n        return of<T>(data);\n      }\n    }\n    return this.http.request<T>(verb, options.url, {\n      body: options.body\n    })\n      .pipe(\n        switchMap(response => {\n          if (options.cacheMins > 0) {\n            this.cacheService.save({\n              key: options.url,\n              data: response,\n              expirationMins: options.cacheMins\n            });\n          }\n          return of<T>(response);\n        })\n      );\n  }\n}\n\nexport class HttpOptions {\n  url: string;\n  body?: any;\n  cacheMins?: number;\n}\n","import {Injectable} from '@angular/core';\nimport {EMPTY, Observable} from 'rxjs';\nimport {debounceTime, expand, map, reduce} from 'rxjs/operators';\nimport {HttpClientService} from './http-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanetsService {\n  private apiUrl = 'https://swapi.dev/api/planets';\n\n  constructor(private http: HttpClientService) {\n  }\n\n  getPlanetsTotal(): Observable<any> {\n    return this.http.get({url: this.apiUrl, cacheMins: 10});\n  }\n\n  getPlanets(page: number, pageSize: number): Observable<any> {\n    let i = 0;\n    const pageTo = Math.ceil((pageSize * page) / 10);\n    let pageFrom = Math.ceil(((pageSize * page) - pageSize) / 10 + 1);\n    if (pageFrom <= 0) {\n      pageFrom = 1;\n    }\n    const finalAPI = `${this.apiUrl}?page=${pageFrom}`;\n    return this.http.get<Planet>({url: finalAPI, cacheMins: 10}).pipe(\n      expand((response) => {\n        i++;\n        return response.next && (pageTo > i) ? this.getPage(response.next) : EMPTY;\n      }),\n      reduce((acc, data) => {\n        if (acc && data) {\n          return {\n            results: acc.results.concat(data.results)\n          };\n        }\n        return acc;\n      }),\n      map(data => {\n        return data.results.splice((pageSize * page - pageSize) % 10, pageSize);\n      })\n    );\n  }\n\n  getPage(apiUrl: string): Observable<any> {\n    return this.http.get<Planet>({url: apiUrl, cacheMins: 10}).pipe(map(response => {\n      return {\n        results: response.results,\n        next: response.next\n      };\n    }));\n  }\n\n  findPlanet(planetName: string): Observable<any> {\n    const finalAPI = `${this.apiUrl}?search=${planetName}`;\n    return this.http.get<Planet>({url: finalAPI}).pipe(debounceTime(1000));\n  }\n\n}\n\ninterface Planet {\n  next: string;\n  results: [];\n  count: number;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}