{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/header/header.component.ts","./src/app/modules/header/header.component.html","./src/app/modules/planet-details/planet-details.component.ts","./src/app/modules/planet-details/planet-details.component.html","./src/app/modules/planet-image/planet-image.component.ts","./src/app/modules/planet-image/planet-image.component.html","./src/app/modules/planets/planets.component.ts","./src/app/modules/planets/planets.component.html","./src/app/services/cache.service.ts","./src/app/services/http-client.service.ts","./src/app/services/planets.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PlanetsComponent} from './modules/planets/planets.component';\nimport {PlanetDetailsComponent} from './modules/planet-details/planet-details.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlanetsComponent\n  },\n  {\n    path: 'detail',\n    component: PlanetDetailsComponent\n  },\n  {\n    path: '**',\n    redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'list-of-planets';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './modules/header/header.component';\nimport { PlanetsComponent } from './modules/planets/planets.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { PlanetImageComponent } from './modules/planet-image/planet-image.component';\nimport { PlanetDetailsComponent } from './modules/planet-details/planet-details.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatButton, MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PlanetsComponent,\n    PlanetImageComponent,\n    PlanetDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatPaginatorModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"main-header\">\n<img src=\"assets/wstazka.png\" alt=\"img\">\n  <span class=\"text\">{{'list of planets' | uppercase}}</span>\n</header>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PlanetsService} from '../../services/planets.service';\n\n@Component({\n  selector: 'app-planet-details',\n  templateUrl: './planet-details.component.html',\n  styleUrls: ['./planet-details.component.scss']\n})\nexport class PlanetDetailsComponent implements OnInit {\n  planetName: string;\n  planet = {\n    rotationPeriod: '',\n    orbitalPeriod: '',\n    climate: ''\n  };\n  isLoading = false;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private planetsService: PlanetsService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.planetName = params['name'];\n\n      this.planetsService.findPlanet(this.planetName).subscribe(data => {\n\n        this.planet.climate = data.results[0].climate;\n        this.planet.rotationPeriod = data.results[0].rotation_period;\n        this.planet.orbitalPeriod = data.results[0].orbital_period;\n        this.isLoading = false;\n\n      });\n    });\n  }\n\n  goToMainPage(){\n    this.router.navigate(['/']);\n  }\n\n}\n","<section class=\"main-section\">\r\n  <button mat-raised-button class=\"standard-button\" (click)=\"goToMainPage()\">Back</button>\r\n  <div *ngIf=\"!isLoading\" class=\"planet-info\">\r\n    <h1>{{planetName}}</h1>\r\n    <p>Rotation period: {{planet.rotationPeriod}}</p>\r\n    <p>Orbital period: {{planet.orbitalPeriod}}</p>\r\n    <p>Climate: {{planet.climate}}</p>\r\n  </div>\r\n  <mat-spinner *ngIf=\"isLoading\" color=\"warn\"></mat-spinner>\r\n</section>\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-planet-image',\n  templateUrl: './planet-image.component.html',\n  styleUrls: ['./planet-image.component.scss']\n})\nexport class PlanetImageComponent implements OnInit {\n  src: string;\n  constructor() {}\n  @Input() planetUrl: string;\n\n  ngOnInit(): void {\n    const arrayUrl = this.planetUrl.split('/');\n    const id = arrayUrl.slice(-2, -1);\n    this.src = String(Number(id) % 20);\n  }\n\n}\n","<img [src]=\"'assets/planets/' + src + '.png'\" alt=\"planets-icon\">\n","import { Component, OnInit } from '@angular/core';\nimport {PlanetsService} from '../../services/planets.service';\nimport {PageEvent} from '@angular/material/paginator';\nimport {Router} from '@angular/router';\nimport {Subject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-planets',\n  templateUrl: './planets.component.html',\n  styleUrls: ['./planets.component.scss']\n})\nexport class PlanetsComponent implements OnInit {\n  planets = [];\n  totalPlanets: number;\n  planetsPerPage = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n  isLoading = false;\n  planetNameChanged: Subject<string> = new Subject<string>();\n\n\n  constructor(private planetsService: PlanetsService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.planetsService.getPlanets(1, this.planetsPerPage).pipe().subscribe(data => {\n      this.planets = data;\n      this.isLoading = false;\n    });\n    this.planetsService.getPlanetsTotal().subscribe(data => {\n      this.totalPlanets = data.count;\n    });\n    this.planetNameChanged.pipe(\n      debounceTime(300),\n      distinctUntilChanged())\n      .subscribe(name => {\n        this.planetsService.findPlanet(name).subscribe(data => {\n          this.planets = data.results;\n          this.totalPlanets = data.count;\n        });\n      });\n  }\n\n  changePage(pageData: PageEvent): void {\n    this.isLoading = true;\n    this.planetsPerPage = pageData.pageSize;\n    this.planetsService.getPlanets(pageData.pageIndex + 1, pageData.pageSize).subscribe(data => {\n      this.planets = data;\n      this.isLoading = false;\n    });\n  }\n\n  search(planetName: string): void {\n    this.planetNameChanged.next(planetName);\n  }\n\n  goToPlanetDetails(planetName: string): void {\n    this.router.navigate(['detail'], {queryParams: {name: planetName}});\n  }\n\n\n}\n","<section class=\"main-section\">\n  <div class=\"search-container\" *ngIf=\"!isLoading\">\n    <label for=\"search-box\">Search:</label>\n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\"/>\n  </div>\n  <div class=\"planets-container\" *ngIf=\"planets.length > 0\">\n    <div class=\"single-planet\" *ngFor=\"let planet of planets\" (click)=\"goToPlanetDetails(planet.name)\">\n      <app-planet-image [planetUrl]=\"planet.url\"></app-planet-image>\n      <span>{{planet.name}}</span>\n    </div>\n  </div>\n  <div class=\"spinner\">\n    <mat-spinner *ngIf=\"isLoading\" color=\"warn\"></mat-spinner>\n  </div>\n  <mat-paginator [length]=\"totalPlanets\" [pageSize]=\"planetsPerPage\" [pageSizeOptions]=\"pageSizeOptions\"\n                 (page)=\"changePage($event)\"></mat-paginator>\n</section>\n\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n  constructor() {\n  }\n\n  save(options: LocalStorageSaveOptions) {\n    options.expirationMins = options.expirationMins || 0;\n\n    const expirationMS = options.expirationMins !== 0 ? options.expirationMins * 60 * 1000 : 0;\n\n    const record = {\n      value: typeof options.data === 'string' ? options.data : JSON.stringify(options.data),\n      expiration: expirationMS !== 0 ? new Date().getTime() + expirationMS : null,\n      hasExpiration: expirationMS !== 0 ? true : false\n    };\n    localStorage.setItem(options.key, JSON.stringify(record));\n  }\n\n  load(key: string) {\n    const item = localStorage.getItem(key);\n    if (item !== null) {\n      const record = JSON.parse(item);\n      const now = new Date().getTime();\n      if (!record || (record.hasExpiration && record.expiration <= now)) {\n        return null;\n      } else {\n        return JSON.parse(record.value);\n      }\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  cleanLocalStorage() {\n    localStorage.clear();\n  }\n}\n\nexport class LocalStorageSaveOptions {\n  key: string;\n  data: any;\n  expirationMins?: number;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {CacheService} from './cache.service';\nimport {Observable, of} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientService {\n\n  constructor(\n    private http: HttpClient,\n    private cacheService: CacheService,\n  ) {\n  }\n\n  get<T>(options: HttpOptions): Observable<T> {\n    return this.httpCall('GET', options);\n  }\n\n  private httpCall<T>(verb: string, options: HttpOptions): Observable<T> {\n\n    options.body = options.body || null;\n    options.cacheMins = options.cacheMins || 0;\n\n    if (options.cacheMins > 0) {\n      const data = this.cacheService.load(options.url);\n      if (data !== null) {\n        return of<T>(data);\n      }\n    }\n    return this.http.request<T>(verb, options.url, {\n      body: options.body\n    })\n      .pipe(\n        switchMap(response => {\n          if (options.cacheMins > 0) {\n            this.cacheService.save({\n              key: options.url,\n              data: response,\n              expirationMins: options.cacheMins\n            });\n          }\n          return of<T>(response);\n        })\n      );\n  }\n}\n\nexport class HttpOptions {\n  url: string;\n  body?: any;\n  cacheMins?: number;\n}\n","import {Injectable} from '@angular/core';\nimport {EMPTY, Observable} from 'rxjs';\nimport {expand, map, reduce} from 'rxjs/operators';\nimport {HttpClientService} from './http-client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanetsService {\n  private apiUrl = 'https://swapi.dev/api/planets';\n\n  constructor(private http: HttpClientService) {\n  }\n\n  getPlanetsTotal(): Observable<any> {\n    return this.http.get({url: this.apiUrl, cacheMins: 10});\n  }\n\n  getPlanets(page: number, pageSize: number): Observable<any> {\n    let i = 0;\n    const pageTo = Math.ceil((pageSize * page) / 10);\n    let pageFrom = Math.ceil(((pageSize * page) - pageSize) / 10 + 1);\n    if (pageFrom <= 0) {\n      pageFrom = 1;\n    }\n    const finalAPI = `${this.apiUrl}?page=${pageFrom}`;\n    return this.http.get<Planet>({url: finalAPI, cacheMins: 10}).pipe(\n      expand((response) => {\n        i++;\n        return response.next && (pageTo > i) ? this.getPage(response.next) : EMPTY;\n      }),\n      reduce((acc, data) => {\n        if (acc && data) {\n          return {\n            results: acc.results.concat(data.results)\n          };\n        }\n        return acc;\n      }),\n      map(data => {\n        return data.results.splice((pageSize * page - pageSize) % 10, pageSize);\n      })\n    );\n  }\n\n  getPage(apiUrl: string): Observable<any> {\n    return this.http.get<Planet>({url: apiUrl, cacheMins: 10}).pipe(map(response => {\n      return {\n        results: response.results,\n        next: response.next\n      };\n    }));\n  }\n\n  findPlanet(planetName: string): Observable<any> {\n    const finalAPI = `${this.apiUrl}?search=${planetName}`;\n    return this.http.get<Planet>({url: finalAPI});\n  }\n\n}\n\ninterface Planet {\n  next: string;\n  results: [];\n  count: number;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}